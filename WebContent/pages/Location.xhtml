<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core">
<ui:include src="/include/IncludeHeader.xhtml"></ui:include>

<h:head>

	<style>
html, body {
	height: 100%;
	margin: 0;
	padding: 0;
}

#map {
	height: 100%;
}

.controls {
	margin-top: 10px;
	border: 1px solid transparent;
	border-radius: 2px 0 0 2px;
	box-sizing: border-box;
	-moz-box-sizing: border-box;
	height: 32px;
	outline: none;
	box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

#pac-input {
	background-color: #fff;
	font-family: Roboto;
	font-size: 15px;
	font-weight: 300;
	margin-left: 12px;
	padding: 0 11px 0 13px;
	text-overflow: ellipsis;
	width: 300px;
}

#pac-input:focus {
	border-color: #4d90fe;
}

.pac-container {
	font-family: Roboto;
}

#type-selector {
	color: #fff;
	background-color: #4d90fe;
	padding: 5px 11px 0px 11px;
}

#type-selector label {
	font-family: Roboto;
	font-size: 13px;
	font-weight: 300;
}
</style>
</h:head>
<body>
	<!-- Esta parte es delicada la lista se llena en un bean "UserBean" -->
	<ui:include src="/include/HiAndByeTrans.xhtml"></ui:include>
	<ui:include src="/include/IncludeBanner.html"></ui:include>
	<ui:include src="/include/IncludeTransMenu.xhtml"></ui:include>


	<p:panel id="panel" header="Panel de edición de localizacion"
		styleClass="blockUser">
		<f:facet name="header">
							Datos generales de la localizacion
						</f:facet>
		<h:form id="LocationId" styleClass="distributerSelector">
			<p:inputText type="hidden" id="test" name="hidden1"
				value="#{LocationBean.center}">
				<p:ajax event="valueChange" />
			</p:inputText>
			<h:panelGrid id="panelLocation" columns="2" cellpadding="5">
				<h:outputText value="Platforma:" />
				<p:selectOneButton value="#{LocationBean.option}">
					<f:selectItem itemLabel="Direccion" itemValue="1" />
					<f:selectItem itemLabel="Coordenas" itemValue="2" />
					<f:selectItem itemLabel="Mapa" itemValue="3" />
					<p:ajax event="change" update="panelLocationDetail"
						listener="#{LocationBean.locationEntryListenerMethod}" />
				</p:selectOneButton>

				<p:spacer />

			</h:panelGrid>

			<h:panelGrid id="panelLocationDetail" columns="1" cellpadding="5">
				<p:spacer />

				<h:panelGrid id="panel1" columns="3" cellpadding="5">
					<h:outputText id="display2" value="#{LocationBean.center}"
						rendered="#{LocationBean.option == '1'}" style="font-weight: bold" />
				</h:panelGrid>

				<h:panelGrid id="panel2" columns="3" cellpadding="5">
					<p:outputLabel value="Latitud:" for="gpslat"
						rendered="#{LocationBean.option == '2'}" />
					<p:inputText id="gpslat" value="#{LocationBean.location.latitude}"
						required="#{LocationBean.editDetail}"
						readonly="#{!(LocationBean.editDetail)}"
						rendered="#{LocationBean.option == '2'}"
						validatorMessage="Solo coordenadas papá">
						<p:ajax event="keyup" update="gpslatmsg" />
						<f:validateRegex pattern="(^-?[0-9]\d*(\.\d+)?$)" />
					</p:inputText>
					<p:message id="gpslatmsg" for="gpslat" display="text,tooltip" />

					<p:outputLabel value="Longitud:" for="gpslon"
						rendered="#{LocationBean.option == '2'}" />
					<p:inputText id="gpslon" value="#{LocationBean.location.longitude}"
						required="#{LocationBean.editDetail}"
						readonly="#{!(LocationBean.editDetail)}"
						rendered="#{LocationBean.option == '2'}"
						validatorMessage="Solo coordenadas papá">
						<p:ajax event="keyup" update="gpslonmsg" />
						<f:validateRegex pattern="^-?[0-9]\d*(\.\d+)?$" />
					</p:inputText>
					<p:message id="gpslonmsg" for="gpslon" display="text,tooltip" />
				</h:panelGrid>

				<p:dialog header="Mapa" widgetVar="dlg" modal="true"
					resizable="false" id="dialogo3" height="400" width="80%"
					closeOnEscape="true">
					<p:ajax event="close" />
					<p:gmap center="#{LocationBean.center}" zoom="13" type="HYBRID"
						id="mapitaNew" style="width:100%;height:400px"
						rendered="#{LocationBean.option == '3'}"
						model="#{LocationBean.emptyModel}" widgetVar="map">
						<p:ajax event="pointSelect"
							listener="#{LocationBean.addMarkerListinerMethod}"
							update="mapitaNew,lat,lng" />
						<p:ajax event="markerDrag" listener="#{LocationBean.onMarkerDrag}"
							update="lat,lng" />
					</p:gmap>
					<p:inputText id="pac-input" styleClass="controls" type="text"
						placeholder="Search Box" >
						<p:ajax event="keyup" onstart="initAutocomplete()" update="pac-input" />
						</p:inputText>
					<h:inputHidden id="lat" value="#{LocationBean.location.latitude}" />
					<h:inputHidden id="lng" value="#{LocationBean.location.longitude}" />
				</p:dialog>
			</h:panelGrid>
			<!-- PANEL DE BOTONES  -->
			<h:panelGrid id="buttonPanel" columns="3" cellpadding="5">

				<p:commandButton ajax="false" value="#{msg.change}"
					id="buttonChange" action="#{LocationBean.actionChangeUser}"
					validateClient="true"
					rendered="#{!LocationBean.showDetailNew and LocationBean.showDetail}"
					update="error,userEditPanel" />
				<p:commandButton ajax="false"
					value="#{LocationBean.userEnabled ? msg.deactivate:msg.reactivate}"
					id="buttonDelete" action="#{LocationBean.actionDeleteUser}"
					validateClient="true"
					rendered="#{!LocationBean.showDetailNew and LocationBean.showDetail and !LocationBean.editDetail}"
					process="@none" />
				<p:commandButton ajax="false" value="#{msg.actionAddUser}"
					id="buttonAdd" action="#{LocationBean.actionAddUser}"
					validateClient="true"
					rendered="#{LocationBean.showDetailNew and LocationBean.showDetail}"
					update="error" />
				<p:commandButton ajax="false" value="#{msg.cancel}" immediate="true"
					id="cancel" process="@none" action="#{LocationBean.actionExit}" />
			</h:panelGrid>
		</h:form>
	</p:panel>
	<ui:include src="/include/IncludeFooter.html"></ui:include>
	<script>
	
	
		var currentMarker = null;

		function handlePointClick(event) {
			if (currentMarker === null) {
				document.getElementById('lat').value = event.latLng.lat();
				document.getElementById('lng').value = event.latLng.lng();

				currentMarker = new google.maps.Marker({
					position : new google.maps.LatLng(event.latLng.lat(),
							event.latLng.lng()),
					draggable : true
				});

				PF('map').addOverlay(currentMarker);

				PF('dlg').show();
			}
		}

		function markerAddComplete() {
			/* 			var title = document.getElementById('title');
			 currentMarker.setTitle(title.value);
			 title.value = "";

			 currentMarker = null;
			 PF('dlg').hide(); */
		}

		function cancel() {
			PF('dlg').hide();
			currentMarker.setMap(null);
			currentMarker = null;

			return false;
		}
		function ip_callback(o) {
			var latlong = "";
			latlong = latlong.concat(o.latitude, ",", o.longitude)
			document.getElementById("LocationId:test").value = latlong;
		}
		
		function initAutocomplete() {
			var map = new google.maps.Map(document.getElementById("LocationId:mapitaNew"), {
			    zoom: 14,
			  });
			  // Create the search box and link it to the UI element.
			  var input = document.getElementById("LocationId:pac-input");
			  var searchBox = new google.maps.places.SearchBox(input);
			  alert(searchBox);
			  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

			  // Bias the SearchBox results towards current map's viewport.
			  map.addListener('bounds_changed', function() {
			    searchBox.setBounds(map.getBounds());
			  });

			  var markers = [];
			  // [START region_getplaces]
			  // Listen for the event fired when the user selects a prediction and retrieve
			  // more details for that place.
			  searchBox.addListener('places_changed', function() {
			    var places = searchBox.getPlaces();

			    if (places.length == 0) {
			      return;
			    }

			    // Clear out the old markers.
			    markers.forEach(function(marker) {
			      marker.setMap(null);
			    });
			    markers = [];

			    // For each place, get the icon, name and location.
			    var bounds = new google.maps.LatLngBounds();
			    places.forEach(function(place) {
			      var icon = {
			        url: place.icon,
			        size: new google.maps.Size(71, 71),
			        origin: new google.maps.Point(0, 0),
			        anchor: new google.maps.Point(17, 34),
			        scaledSize: new google.maps.Size(25, 25)
			      };

			      // Create a marker for each place.
			      markers.push(new google.maps.Marker({
			        map: map,
			        icon: icon,
			        title: place.name,
			        draggable : true,
			        position: place.geometry.location
			      }));

			      if (place.geometry.viewport) {
			        // Only geocodes have viewport.
			        bounds.union(place.geometry.viewport);
			      } else {
			        bounds.extend(place.geometry.location);
			      }
			    });
			    map.fitBounds(bounds);
			  });
			  // [END region_getplaces]
			}

	</script>

	<script src="http://freegeoip.net/json/?callback=ip_callback"></script>
	    <script  src="https://maps.googleapis.com/maps/api/js?#{GlobalData.param['param.key.google']}&amp;libraries=places&amp;callback=initAutocomplete"
         ></script>
</body>
</html>